from jenkins/inbound-agent:4.3-4

ENV HOME /home/jenkins/agent

# User- & Group-ID same as in the hostsystem. also docker-group ID
ARG PUID=1000
ARG PGID=1000
ARG DOCKER_PGID=998

USER root

# Add jenkins-user (owner to mount-files is the same as in the hostsystem)
RUN groupmod -g ${PGID} jenkins
RUN usermod -u ${PUID} jenkins

# Add Docker group to user (access to docker.sock)
RUN groupadd -g ${DOCKER_PGID} docker
RUN usermod -a -G docker jenkins

WORKDIR /home/jenkins/agent
USER jenkins


# Copy SSH key for git private repos
ADD .ssh/id_rsa /root/.ssh/id_rsa
RUN chmod 600 /root/.ssh/id_rsa
# Use git with SSH instead of https
RUN echo "[url \"git@github.com:\"]\n\tinsteadOf = https://github.com/" >> /root/.gitconfig
# Skip Host verification for git
RUN echo "StrictHostKeyChecking no " > /root/.ssh/config


RUN git config --global url."git@github.hpe.com:".insteadOf "https://github.hpe.com"

# docker build -t jenkins-inbound-agent-dind --build-arg PUID=$(id -u)  --build-arg PGID=$(id -g) --build-arg DOCKER_PGID=$(stat -c "%g" /var/run/docker.sock) .

# echo "git-user:x:$(id -u):$(id -g):Git User:/tmp:/bin/bash" > /tmp/fake_passwd # See below why to use this
sudo docker run  \
  -u $(id -u):$(id -g)  \
  -w /tmp    -v $HOME/.ssh:/home/jenkins/.ssh \
  -v /tmp/fake_passwd:/etc/passwd   \
  --entrypoint sh  \
  -it jenkinsci/jnlp-slave:latest

  # commands in the container:
  $ export GIT_SSH_COMMAND='ssh -i /path/to/.ssh/id_rsa -o "StrictHostKeyChecking=no"'
  $ git clone [path to git repo]


